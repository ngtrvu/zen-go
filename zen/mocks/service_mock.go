// Code generated by MockGen. DO NOT EDIT.
// Source: frameworks/common/go/zen/service.go
//
// Generated by this command:
//
//	mockgen -source=frameworks/common/go/zen/service.go -destination=frameworks/common/go/zen/mocks/service_mock.go
//

// Package mock_zen is a generated GoMock package.
package mock_zen

import (
	context "context"
	reflect "reflect"

	uuid "github.com/google/uuid"
	gomock "go.uber.org/mock/gomock"
	gorm "github.com/ngtrvu/zen-go/gorm"
)

// MockBaseServiceInterface is a mock of BaseServiceInterface interface.
type MockBaseServiceInterface struct {
	ctrl     *gomock.Controller
	recorder *MockBaseServiceInterfaceMockRecorder
	isgomock struct{}
}

// MockBaseServiceInterfaceMockRecorder is the mock recorder for MockBaseServiceInterface.
type MockBaseServiceInterfaceMockRecorder struct {
	mock *MockBaseServiceInterface
}

// NewMockBaseServiceInterface creates a new mock instance.
func NewMockBaseServiceInterface(ctrl *gomock.Controller) *MockBaseServiceInterface {
	mock := &MockBaseServiceInterface{ctrl: ctrl}
	mock.recorder = &MockBaseServiceInterfaceMockRecorder{mock}
	return mock
}

// EXPECT returns an object that allows the caller to indicate expected use.
func (m *MockBaseServiceInterface) EXPECT() *MockBaseServiceInterfaceMockRecorder {
	return m.recorder
}

// Get mocks base method.
func (m *MockBaseServiceInterface) Get(ctx context.Context, id uuid.UUID, item any) error {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "Get", ctx, id, item)
	ret0, _ := ret[0].(error)
	return ret0
}

// Get indicates an expected call of Get.
func (mr *MockBaseServiceInterfaceMockRecorder) Get(ctx, id, item any) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "Get", reflect.TypeOf((*MockBaseServiceInterface)(nil).Get), ctx, id, item)
}

// GetAll mocks base method.
func (m *MockBaseServiceInterface) GetAll(ctx context.Context, query *gorm.Query, items any) (int, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "GetAll", ctx, query, items)
	ret0, _ := ret[0].(int)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// GetAll indicates an expected call of GetAll.
func (mr *MockBaseServiceInterfaceMockRecorder) GetAll(ctx, query, items any) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "GetAll", reflect.TypeOf((*MockBaseServiceInterface)(nil).GetAll), ctx, query, items)
}
